name: Sprint Release Notes

on:
  workflow_dispatch:
    inputs:
      sprint_name:
        description: 'Sprint name (e.g., SCRUM Sprint 2)'
        required: true
      version:
        description: 'Release version (e.g., v1.2.0)'
        required: true

jobs:
  create-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests jira

      - name: Generate release notes
        env:
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          python generate_release_notes.py "${{ github.event.inputs.sprint_name }}" "${{ github.event.inputs.version }}"

      - name: Checkout main branch
        run: |
          git checkout main
          git pull origin main

      - name: Prepare branch name
        id: prepare_branch
        run: |
          BRANCH_NAME="release/${{ github.event.inputs.version }}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: Create and checkout new branch from main
        run: |
          git checkout -b ${{ steps.prepare_branch.outputs.BRANCH_NAME }}

      - name: Configure Git author
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"

      - name: Commit changes
        run: |
          git add release_notes.md
          git commit -m "Add release notes for ${{ github.event.inputs.sprint_name }} - ${{ github.event.inputs.version }}"

      - name: Push new branch
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          git push origin ${{ steps.prepare_branch.outputs.BRANCH_NAME }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }} for ${{ github.event.inputs.sprint_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
