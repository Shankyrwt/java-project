permissions:
  contents: write

name: Update Terraform Version

on:
  workflow_dispatch:
    inputs:
      sprint_name:
        description: 'Sprint name (e.g., Sprint5)'
        required: true
      version:
        description: 'Release version (e.g., v1.2.0)'
        required: true

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests jira

      - name: Generate release notes
        env:
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          python generate_release_notes.py "${{ github.event.inputs.sprint_name }}"

      - name: Save release notes as output
        id: release_notes
        run: |
          cat release_notes.md
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat release_notes.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Step 1: Checkout main branch in main repository
      - name: Checkout main branch
        run: |
          git checkout main
          git pull origin main

      # Step 2: Create and checkout release branch
      - name: Create and checkout release branch
        run: |
          git checkout -b release/${{ github.event.inputs.version }}
          git push https://${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git release/${{ github.event.inputs.version }}

      # Step 3: Clone the target repository using the PAT
      - name: Clone the target repository
        run: |
          git clone https://${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/Shankyrwt/Ansible_playbook.git
          cd Ansible_playbook

      # Step 4: Checkout certain branch in target repository
      - name: Checkout certain branch
        run: |
          cd Ansible_playbook
          git checkout certain

      # Step 5: Configure Git for the certain branch
      - name: Configure Git for certain branch
        run: |
          cd Ansible_playbook
          git config user.email "shankarwt777@gmail.com"
          git config user.name "Shankyrwt"
      
      # Step 6: Replace version in all .tf files in certain branch
      - name: Replace version in all .tf files in certain branch
        run: |
          cd Ansible_playbook
          find . -type f -name "*.tf" -exec sed -i 's/ref=v[0-9.]*/ref=${{ github.event.inputs.version }}/g' {} +

      # Step 7: Create and push changes for certain branch
      - name: Create and push changes for certain branch
        run: |
          cd Ansible_playbook
          git checkout -b workflow/certain/${{ github.event.inputs.version }}
          git add --all
          git commit -m "Update Terraform ref to version ${{ github.event.inputs.version }}"
          git push https://${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/Shankyrwt/Ansible_playbook.git workflow/certain/${{ github.event.inputs.version }}

      # Step 8: Install GitHub CLI
      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      # Step 9: Create pull request for certain branch in Ansible_playbook repository using GitHub CLI
      - name: Create pull request for certain branch
        run: |
          gh pr create --repo Shankyrwt/Ansible_playbook --base certain --head workflow/certain/${{ github.event.inputs.version }} --title "Update Terraform ref to version ${{ github.event.inputs.version }}" --body "${{ env.RELEASE_NOTES }}"

      # Step 10: Checkout certaua branch
      - name: Checkout certaua branch
        run: |
          cd Ansible_playbook
          git checkout certaua

      # Step 11: Configure Git for certaua branch
      - name: Configure Git for certaua branch
        run: |
          cd Ansible_playbook
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

      # Step 12: Replace version in all .tf files in certaua branch
      - name: Replace version in all .tf files in certaua branch
        run: |
          cd Ansible_playbook
          find . -type f -name "*.tf" -exec sed -i 's/ref=v[0-9.]*/ref=${{ github.event.inputs.version }}/g' {} +

      # Step 13: Commit and push changes for certaua branch
      - name: Commit and push changes for certaua branch
        run: |
          cd Ansible_playbook
          git checkout -b workflow/certaua/${{ github.event.inputs.version }}
          git add --all
          git commit -m "Update Terraform ref to version ${{ github.event.inputs.version }}"
          git push https://${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}@github.com/Shankyrwt/Ansible_playbook.git workflow/certaua/${{ github.event.inputs.version }}

      # Step 14: Create pull request for certaua branch in Ansible_playbook repository using GitHub CLI
      - name: Create pull request for certaua branch
        run: |
          gh pr create --repo Shankyrwt/Ansible_playbook --base certaua --head workflow/certaua/${{ github.event.inputs.version }} --title "Update Terraform ref to version ${{ github.event.inputs.version }}" --body "${{ env.RELEASE_NOTES }}"
