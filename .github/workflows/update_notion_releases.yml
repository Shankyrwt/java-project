name: Sprint Release Notes and Version Update

on:
  workflow_dispatch:
    inputs:
      sprint_name:
        description: 'Sprint name (e.g., Sprint5)'
        required: true

jobs:
  create-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests jira

      - name: Generate release notes
        env:
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          python generate_release_notes.py "${{ github.event.inputs.sprint_name }}"

      - name: Prepare unique tag name
        id: prepare_tag
        run: |
          TAG_NAME=$(echo "${{ github.event.inputs.sprint_name }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-zA-Z0-9]/-/g')
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          UNIQUE_TAG_NAME="${TAG_NAME}-${TIMESTAMP}"
          echo "TAG_NAME=${UNIQUE_TAG_NAME}" >> $GITHUB_OUTPUT
          echo "Branch name will be: Release/${UNIQUE_TAG_NAME}"

      - name: Check TAG_NAME output
        run: |
          echo "Prepared tag name: ${{ steps.prepare_tag.outputs.TAG_NAME }}"
          if [ -z "${{ steps.prepare_tag.outputs.TAG_NAME }}" ]; then
            echo "Error: TAG_NAME is empty"
            exit 1
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare_tag.outputs.TAG_NAME }}
          release_name: Release ${{ github.event.inputs.sprint_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false

  update-version-references:
    needs: create-release-notes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update version references
        run: |
          NEW_VERSION="${{ steps.prepare_tag.outputs.TAG_NAME }}"
          find . -type f -name "*.tf" -exec sed -i "s/old_version/${NEW_VERSION}/g" {} +

      - name: Commit changes and create new branch
        run: |
          BRANCH_NAME="Release/${{ steps.prepare_tag.outputs.TAG_NAME }}"
          echo "Creating branch: $BRANCH_NAME"
          if [ -z "${BRANCH_NAME}" ]; then
            echo "Error: BRANCH_NAME is empty"
            exit 1
          fi
          git checkout -b "$BRANCH_NAME"
          git commit -am "Updated version references to ${{ steps.prepare_tag.outputs.TAG_NAME }}"
          git push origin "$BRANCH_NAME"

  notify:
    needs: update-version-references
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        run: |
          echo "Release and version update completed for ${{ github.event.inputs.sprint_name }} on branch Release/${{ steps.prepare_tag.outputs.TAG_NAME }}"
